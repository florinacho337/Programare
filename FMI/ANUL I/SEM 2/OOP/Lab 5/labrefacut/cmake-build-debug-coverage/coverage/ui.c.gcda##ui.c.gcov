        -:    0:Source:/home/florin/FMI/SEM2/OOP/Lab 5/labrefacut/ui.c
        -:    0:Graph:/home/florin/FMI/SEM2/OOP/Lab 5/labrefacut/cmake-build-debug-coverage/CMakeFiles/labrefacut.dir/ui.c.gcno
        -:    0:Data:/home/florin/FMI/SEM2/OOP/Lab 5/labrefacut/cmake-build-debug-coverage/CMakeFiles/labrefacut.dir/ui.c.gcda
        -:    0:Runs:1
        -:    1:#include <stdio.h>
        -:    2:#include "service.h"
        -:    3:#include <malloc.h>
        -:    4:#include <string.h>
        -:    5:#include "MyList.h"
        -:    6:#include "domain.h"
        -:    7:#include <stdbool.h>
        -:    8:
function meniu called 1 returned 100% blocks executed 100%
        1:    9:void meniu()
        -:   10:{
        1:   11:    printf("1. Adaugati o tranzactie: \n");
        1:   11-block  0
call    0 returned 1
        1:   12:    printf("2. Modificati o tranzactie: \n");
call    0 returned 1
        1:   13:    printf("3. Stergeti o tranzactie: \n");
call    0 returned 1
        1:   14:    printf("4. Vizualizati tranzactiile dupa un criteriu: \n");
call    0 returned 1
        1:   15:    printf("5. Vizualizati tranzactiile ordonate: \n");
call    0 returned 1
        1:   16:    printf("6. Vizualizati toate tranzactiile: \n");
call    0 returned 1
        1:   17:    printf("7. Undo ultima operatie efectuata:\n");
call    0 returned 1
        1:   18:    printf("0. Iesire din aplicatie.\n");
call    0 returned 1
        1:   19:}
        -:   20:
function ui_add called 0 returned 0% blocks executed 0%
    #####:   21:void ui_add(Service* repo_ui){
        -:   22:    int zi, suma;
    #####:   23:    char* tip = (char*)malloc(100);
    #####:   24:    char* descriere = (char*)malloc(100);
    #####:   25:    bool intrare = true;
    #####:   26:    while (intrare) {
    %%%%%:   26-block  0
    %%%%%:   26-block  1
branch  0 never executed
branch  1 never executed
    #####:   27:        printf("Introduceti ziua tranzactiei: \n");
    %%%%%:   27-block  0
call    0 never executed
    #####:   28:        scanf("%d", &zi);
call    0 never executed
    #####:   29:        printf("Introduceti suma tranzactiei: \n");
call    0 never executed
    #####:   30:        scanf("%d", &suma);
call    0 never executed
    #####:   31:        printf("Introduceti tipul tranzactiei (intrare/iesire): \n");
call    0 never executed
    #####:   32:        scanf("%s", tip);
call    0 never executed
    #####:   33:        printf("Introduceti descrierea tranzactiei: \n");
call    0 never executed
    #####:   34:        scanf("%s", descriere);
call    0 never executed
    #####:   35:        if (strcmp(tip, "intrare") == 0 || strcmp(tip, "iesire") == 0)
branch  0 never executed
branch  1 never executed
    %%%%%:   35-block  0
branch  2 never executed
branch  3 never executed
    #####:   36:            intrare = false;
    %%%%%:   36-block  0
    #####:   37:        else printf("Tip invalid!\n");
    %%%%%:   37-block  0
call    0 never executed
        -:   38:    }
    #####:   39:    service_add(repo_ui, zi, suma, tip, descriere);
    %%%%%:   39-block  0
call    0 never executed
    #####:   40:    free(tip);
    #####:   41:    free(descriere);
    #####:   42:    printf("Tranzactia a fost adaugata cu succes!\n");
call    0 never executed
    #####:   43:}
        -:   44:
function ui_delete called 0 returned 0% blocks executed 0%
    #####:   45:void ui_delete(Service* repo_ui)
        -:   46:{
        -:   47:    int poz;
    #####:   48:    printf("Introduceti pozitia tranzactiei pe care doriti s-o stergeti: \n");
    %%%%%:   48-block  0
call    0 never executed
    #####:   49:    scanf("%d", &poz);
call    0 never executed
    #####:   50:    service_delete(repo_ui, poz);
call    0 never executed
    #####:   51:    printf("Tranzactia a fost stearsa cu succes!\n");
call    0 never executed
    #####:   52:}
        -:   53:
function ui_modify called 0 returned 0% blocks executed 0%
    #####:   54:void ui_modify(Service * repo)
        -:   55:{
        -:   56:    int poz, zi, suma;
    #####:   57:    char* tip = (char*)malloc(100);
    #####:   58:    char* descriere = (char*)malloc(100);
    #####:   59:    bool intrare = true;
    #####:   60:    while (intrare) {
    %%%%%:   60-block  0
    %%%%%:   60-block  1
branch  0 never executed
branch  1 never executed
    #####:   61:        printf("Introduceti pozitia tranzactiei pe care doriti sa o stergeti:\n");
    %%%%%:   61-block  0
call    0 never executed
    #####:   62:        scanf("%d", &poz);
call    0 never executed
    #####:   63:        printf("Introduceti ziua tranzactiei: \n");
call    0 never executed
    #####:   64:        scanf("%d",&zi);
call    0 never executed
    #####:   65:        printf("Introduceti suma tranzactiei: \n");
call    0 never executed
    #####:   66:        scanf("%d", &suma);
call    0 never executed
    #####:   67:        printf("Introduceti tipul tranzactiei (intrare/iesire): \n");
call    0 never executed
    #####:   68:        scanf("%s", tip);
call    0 never executed
    #####:   69:        printf("Introduceti descrierea tranzactiei: \n");
call    0 never executed
    #####:   70:        scanf("%s", descriere);
call    0 never executed
    #####:   71:        if (strcmp(tip, "intrare") == 0 || strcmp(tip, "iesire") == 0)
branch  0 never executed
branch  1 never executed
    %%%%%:   71-block  0
branch  2 never executed
branch  3 never executed
    #####:   72:            intrare = false;
    %%%%%:   72-block  0
    #####:   73:        else printf("Tip invalid!\n");
    %%%%%:   73-block  0
call    0 never executed
    #####:   74:        service_modify(repo, poz, zi, suma, tip, descriere);
    %%%%%:   74-block  0
call    0 never executed
    #####:   75:        printf("Tranzactie modificata cu succes!\n");
call    0 never executed
        -:   76:    }
    #####:   77:    free(tip);
    #####:   78:    free(descriere);
    #####:   79:}
        -:   80:
function ui_print called 0 returned 0% blocks executed 0%
    #####:   81:void ui_print(Service * repo)
        -:   82:{
        -:   83:    int i;
    #####:   84:    int nr = 0;
    #####:   85:    for (i =0; i< size(repo->listaTranzactii); i++) {
    %%%%%:   85-block  0
    %%%%%:   85-block  1
    %%%%%:   85-block  2
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   86:        Tranzactie* tr = (Tranzactie*)get(repo->listaTranzactii, i);
    %%%%%:   86-block  0
call    0 never executed
    #####:   87:        if (tr->suma != 0) {
branch  0 never executed
branch  1 never executed
    #####:   88:            printf("%d. %d %d %s %s\n", i, tr->zi, tr->suma, tr->tip, tr->descriere);
    %%%%%:   88-block  0
call    0 never executed
    #####:   89:            nr++;
        -:   90:        }
        -:   91:    }
    #####:   92:    if (nr==0)
    %%%%%:   92-block  0
branch  0 never executed
branch  1 never executed
    #####:   93:        printf("Nu exista tranzactii!\n");
    %%%%%:   93-block  0
call    0 never executed
        -:   94:
    #####:   95:}
        -:   96:
        -:   97:
function ui_print_by_type called 0 returned 0% blocks executed 0%
    #####:   98:void ui_print_by_type(Service *repo) {
    #####:   99:    char* tip = (char*)malloc(100);
        -:  100:    MyList *repo_nou;
        -:  101:    int i;
    #####:  102:    int nr = 0;
    #####:  103:    bool run = true;
    #####:  104:    while(run){
    %%%%%:  104-block  0
    %%%%%:  104-block  1
branch  0 never executed
branch  1 never executed
    #####:  105:        printf("Alegeti tipul (intrare/iesire):\n");
    %%%%%:  105-block  0
call    0 never executed
    #####:  106:        scanf("%s", tip);
call    0 never executed
    #####:  107:        if(strcmp(tip,"intrare") == 0 || strcmp(tip,"iesire")==0) {
branch  0 never executed
branch  1 never executed
    %%%%%:  107-block  0
branch  2 never executed
branch  3 never executed
    #####:  108:            run = false;
    #####:  109:            repo_nou = service_view_type(repo, tip);
    %%%%%:  109-block  0
call    0 never executed
        -:  110:        }
    #####:  111:        else printf("Tip invalid!\n");
    %%%%%:  111-block  0
call    0 never executed
        -:  112:    }
    #####:  113:    for(i=0;i<= size(repo_nou);i++) {
    %%%%%:  113-block  0
    %%%%%:  113-block  1
    %%%%%:  113-block  2
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  114:        Tranzactie* tr = (Tranzactie*) get(repo_nou, i);
    %%%%%:  114-block  0
call    0 never executed
    #####:  115:        if (tr->suma != 0) {
branch  0 never executed
branch  1 never executed
    #####:  116:            printf("%d. %d %d %s %s\n", i, tr->zi, tr->suma, tr->tip, tr->descriere);
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:            nr++;
        -:  118:        }
        -:  119:    }
    #####:  120:    if(nr==0) printf("Nu exista tranzactii cu acest tip!\n");
    %%%%%:  120-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:  120-block  1
call    2 never executed
    #####:  121:}
        -:  122:
function ui_print_by_sum called 0 returned 0% blocks executed 0%
    #####:  123:void ui_print_by_sum(Service* repo){
        -:  124:    int ordine;
    #####:  125:    bool run = true;
        -:  126:    int i;
        -:  127:    int suma;
    #####:  128:    int nr = 0;
        -:  129:    MyList* repo_nou;
    #####:  130:    printf("Introduceti suma: \n");
    %%%%%:  130-block  0
call    0 never executed
    #####:  131:    scanf("%d", &suma);
call    0 never executed
    #####:  132:    printf("Introduceti ordinea (1. Greater/ 2. Less): \n");
call    0 never executed
    #####:  133:    while(run){
    %%%%%:  133-block  0
branch  0 never executed
branch  1 never executed
    #####:  134:    scanf("%d", &ordine);
    %%%%%:  134-block  0
call    0 never executed
    #####:  135:    if (ordine == 1 || ordine == 2) {
branch  0 never executed
branch  1 never executed
    %%%%%:  135-block  0
branch  2 never executed
branch  3 never executed
    #####:  136:        run = false;
    #####:  137:        repo_nou = service_view_sum(repo, suma, ordine);
    %%%%%:  137-block  0
call    0 never executed
        -:  138:    }
    #####:  139:    else printf("Optiune invalida!\n");
    %%%%%:  139-block  0
call    0 never executed
        -:  140:
        -:  141:    }
    #####:  142:    for(i=0;i< size(repo_nou);i++) {
    %%%%%:  142-block  0
    %%%%%:  142-block  1
    %%%%%:  142-block  2
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  143:        Tranzactie *tr = (Tranzactie*)get(repo_nou, i);
    %%%%%:  143-block  0
call    0 never executed
    #####:  144:        if (tr->suma != 0) {
branch  0 never executed
branch  1 never executed
    #####:  145:            printf("%d. %d %d %s %s\n", i, tr->zi, tr->suma, tr->tip, tr->descriere);
    %%%%%:  145-block  0
call    0 never executed
    #####:  146:            nr++;
        -:  147:        }
        -:  148:    }
    #####:  149:    if (nr==0) printf("Nu exista tranzactii cu aceasta suma!\n");
    %%%%%:  149-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:  149-block  1
call    2 never executed
        -:  150:
        -:  151:
    #####:  152:}
        -:  153:
function ui_select_sort called 0 returned 0% blocks executed 0%
    #####:  154:void ui_select_sort(Service* repo_ui, int criteriu, int ordine)
        -:  155:{
        -:  156:    MyList * repo_nou;
    #####:  157:    repo_nou = service_select_sort(repo_ui, criteriu, ordine);
    %%%%%:  157-block  0
call    0 never executed
        -:  158:    int i;
    #####:  159:    int nr = 0;
    #####:  160:    for(i=0;i< size(repo_nou);i++) {
    %%%%%:  160-block  0
    %%%%%:  160-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  161:        Tranzactie *tr = (Tranzactie*)get(repo_nou, i);
    %%%%%:  161-block  0
call    0 never executed
    #####:  162:        if (tr->suma != 0) {
branch  0 never executed
branch  1 never executed
    #####:  163:            printf("%d. %d %d %s %s\n", i, tr->zi, tr->suma, tr->tip, tr->descriere);
    %%%%%:  163-block  0
call    0 never executed
    #####:  164:            nr++;
        -:  165:        }
        -:  166:    }
    #####:  167:    if (nr==0)
    %%%%%:  167-block  0
branch  0 never executed
branch  1 never executed
    #####:  168:        printf("Nu exista tranzactii!\n");
    %%%%%:  168-block  0
call    0 never executed
    #####:  169:}
        -:  170:
function ui_undo called 0 returned 0% blocks executed 0%
    #####:  171:void ui_undo(Service* service){
    #####:  172:    int undo = service_undo(service);
    %%%%%:  172-block  0
call    0 never executed
    #####:  173:    if(undo == 1)
branch  0 never executed
branch  1 never executed
    #####:  174:        printf("Nu se mai poate da undo!\n");
    %%%%%:  174-block  0
call    0 never executed
        -:  175:    else
    #####:  176:        printf("Undo executat cu succes!\n");
    %%%%%:  176-block  0
call    0 never executed
    #####:  177:}
