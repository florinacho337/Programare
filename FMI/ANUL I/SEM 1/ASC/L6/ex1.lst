     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 010203                      s db 1, 2, 3
    15                                      ls equ $-s
    16 00000003 <res 00000003>              d resb ls
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20                                          ; ...
    21 00000000 BF[03000000]                    mov edi, d
    22 00000005 BE[00000000]                    mov esi, s
    23 0000000A 83C602                          add esi, ls-1; pentru a pozitiona esi la adresa ultimului element al sirului s
    24 0000000D B903000000                      mov ecx, ls
    25                                          repeta:
    26 00000012 FD                                  std
    27 00000013 AD                                  lodsd
    28 00000014 FC                                  cld
    29 00000015 AA                                  stosb
    30 00000016 E2FA                            loop repeta
    31                                          
    32                                          ; exit(0)
    33 00000018 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    34 0000001A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
