     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 E6                          a db 11100110b
    15 00000001 A3F1                        b dw 0f1a3h 
    16 00000003 AF7D0600                    c dd 067dafh
    17 00000007 0000                        r dw 0
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 66830D[07000000]1F              or word[r], 00000000000011111b
    24 00000008 668B1D[01000000]                mov bx, [b]
    25 0000000F 66F7D3                          not bx
    26 00000012 66C1EB08                        shr bx,  8 ; bx = 00000000 b(15-8)
    27 00000016 6681E3E000                      and bx, 0000000011100000b ; bx = 00000000 b(15-13) 00000
    28 0000001B 66091D[07000000]                or word[r], bx
    29 00000022 A0[00000000]                    mov al, [a]
    30 00000027 6698                            cbw; ax = a(15-0) 
    31 00000029 66C1E008                        shl ax, 8; ax = a(7-0)00000000b
    32 0000002D 6625001F                        and ax, 0001111100000000b; ax = 000 a(4-0) 00000000b
    33 00000031 660905[07000000]                or word[r], ax
    34 00000038 8B1D[03000000]                  mov ebx, [c]
    35 0000003E C1EB07                          shr ebx, 7; ebx = 0000000 c(31-7)
    36 00000041 6681E300E0                      and bx, 1110000000000000b ; bx = c(22-20) 0000000000000b
    37 00000046 66091D[07000000]                or word[r], bx
    38                                          
    39                                          ; exit(0)
    40 0000004D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    41 0000004F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
