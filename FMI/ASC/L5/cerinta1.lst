     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 0AFFFE0BFD                  s db 10, -1, -2, 11, -3
    15                                      ls equ $-s
    16 00000005 <res 00000005>              r resb ls
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 B905000000                      mov ecx, ls
    23 00000005 BE00000000                      mov esi, 0; s
    24 0000000A BF00000000                      mov edi, 0; d
    25                                          repeta:
    26 0000000F 8A86[00000000]                      mov al, byte[s+esi]
    27 00000015 3C00                                cmp al, 0
    28 00000017 7C02                                jl negativ
    29 00000019 7D07                                jge next
    30                                                  negativ:
    31 0000001B 8887[05000000]                              mov byte[r+edi], al
    32 00000021 47                                          inc edi
    33                                                      ;inc esi
    34                                                      
    35                                                      j;mp myendif
    35          ******************       warning: label alone on a line without a colon might be in error [-w+orphan-labels]
    36                                                  next:
    37 00000022 46                                          inc esi
    38                                                      ;myendif:
    39 00000023 E2EA                             loop repeta
    40                                          ; exit(0)
    41 00000025 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    42 00000027 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
