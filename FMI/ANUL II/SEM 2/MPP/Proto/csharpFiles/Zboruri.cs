// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Zboruri.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Networking {

  /// <summary>Holder for reflection information generated from Zboruri.proto</summary>
  public static partial class ZboruriReflection {

    #region Descriptor
    /// <summary>File descriptor for Zboruri.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ZboruriReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1aYm9ydXJpLnByb3RvEhB6Ym9ydXJpLnByb3RvY29sIisKB0FuZ2FqYXQS",
            "EAoIdXNlcm5hbWUYASABKAkSDgoGcGFyb2xhGAIgASgJIlsKBFpib3ISEAoI",
            "YWVyb3BvcnQYASABKAkSEgoKZGVzdGluYXRpZRgCIAEoCRIPCgdwbGVjYXJl",
            "GAMgASgJEhAKCG5yTG9jdXJpGAQgASgFEgoKAmlkGAUgASgFIgcKBUVtcHR5",
            "Ij0KElJlcXVlc3RGaW5kWmJvcnVyaRIMCgRkZXN0GAEgASgJEgwKBGRhdGUY",
            "AiABKAkSCwoDbWluGAMgASgFIooBChNSZXF1ZXN0Q3VtcGFyYUJpbGV0Eg4K",
            "BmNsaWVudBgBIAEoCRIMCgR0YXJhGAIgASgJEgwKBG9yYXMYAyABKAkSDwoH",
            "dHVyaXN0aRgEIAMoCRIQCghuckxvY3VyaRgFIAEoBRIkCgR6Ym9yGAYgASgL",
            "MhYuemJvcnVyaS5wcm90b2NvbC5aYm9yImEKDUJpbGV0Q3VtcGFyYXQSJwoH",
            "bmV3WmJvchgBIAEoCzIWLnpib3J1cmkucHJvdG9jb2wuWmJvchInCgdvbGRa",
            "Ym9yGAIgASgLMhYuemJvcnVyaS5wcm90b2NvbC5aYm9yIj4KE1Jlc3BvbnNl",
            "RmluZFpib3J1cmkSJwoHZmxpZ2h0cxgBIAMoCzIWLnpib3J1cmkucHJvdG9j",
            "b2wuWmJvciIgCghSZXNwb25zZRIUCgxlcnJvck1lc3NhZ2UYASABKAkiHQoP",
            "UmVxdWVzdEZpbmRaYm9yEgoKAmlkGAEgASgFMu4DCg5aYm9ydXJpU2Vydmlj",
            "ZRI+CgVMb2dpbhIZLnpib3J1cmkucHJvdG9jb2wuQW5nYWphdBoaLnpib3J1",
            "cmkucHJvdG9jb2wuUmVzcG9uc2USPwoGTG9nb3V0EhkuemJvcnVyaS5wcm90",
            "b2NvbC5BbmdhamF0GhouemJvcnVyaS5wcm90b2NvbC5SZXNwb25zZRJtCh5G",
            "aW5kWmJvcnVyaURlc3REYXRlQW5kTWluU2VhdHMSJC56Ym9ydXJpLnByb3Rv",
            "Y29sLlJlcXVlc3RGaW5kWmJvcnVyaRolLnpib3J1cmkucHJvdG9jb2wuUmVz",
            "cG9uc2VGaW5kWmJvcnVyaRJNCgtGaW5kWmJvcnVyaRIXLnpib3J1cmkucHJv",
            "dG9jb2wuRW1wdHkaJS56Ym9ydXJpLnByb3RvY29sLlJlc3BvbnNlRmluZFpi",
            "b3J1cmkSVgoMQ3VtcGFyYUJpbGV0EiUuemJvcnVyaS5wcm90b2NvbC5SZXF1",
            "ZXN0Q3VtcGFyYUJpbGV0Gh8uemJvcnVyaS5wcm90b2NvbC5CaWxldEN1bXBh",
            "cmF0EkUKCEZpbmRaYm9yEiEuemJvcnVyaS5wcm90b2NvbC5SZXF1ZXN0Rmlu",
            "ZFpib3IaFi56Ym9ydXJpLnByb3RvY29sLlpib3JCKwoKcm8ubXBwMjAyNEIQ",
            "WmJvcnVyaVByb3RvYnVmc6oCCk5ldHdvcmtpbmdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Networking.Angajat), global::Networking.Angajat.Parser, new[]{ "Username", "Parola" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Networking.Zbor), global::Networking.Zbor.Parser, new[]{ "Aeroport", "Destinatie", "Plecare", "NrLocuri", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Networking.Empty), global::Networking.Empty.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Networking.RequestFindZboruri), global::Networking.RequestFindZboruri.Parser, new[]{ "Dest", "Date", "Min" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Networking.RequestCumparaBilet), global::Networking.RequestCumparaBilet.Parser, new[]{ "Client", "Tara", "Oras", "Turisti", "NrLocuri", "Zbor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Networking.BiletCumparat), global::Networking.BiletCumparat.Parser, new[]{ "NewZbor", "OldZbor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Networking.ResponseFindZboruri), global::Networking.ResponseFindZboruri.Parser, new[]{ "Flights" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Networking.Response), global::Networking.Response.Parser, new[]{ "ErrorMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Networking.RequestFindZbor), global::Networking.RequestFindZbor.Parser, new[]{ "Id" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Angajat : pb::IMessage<Angajat> {
    private static readonly pb::MessageParser<Angajat> _parser = new pb::MessageParser<Angajat>(() => new Angajat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Angajat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Networking.ZboruriReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Angajat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Angajat(Angajat other) : this() {
      username_ = other.username_;
      parola_ = other.parola_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Angajat Clone() {
      return new Angajat(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parola" field.</summary>
    public const int ParolaFieldNumber = 2;
    private string parola_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parola {
      get { return parola_; }
      set {
        parola_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Angajat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Angajat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Parola != other.Parola) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Parola.Length != 0) hash ^= Parola.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Parola.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Parola);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Parola.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parola);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Angajat other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Parola.Length != 0) {
        Parola = other.Parola;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Parola = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Zbor : pb::IMessage<Zbor> {
    private static readonly pb::MessageParser<Zbor> _parser = new pb::MessageParser<Zbor>(() => new Zbor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Zbor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Networking.ZboruriReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Zbor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Zbor(Zbor other) : this() {
      aeroport_ = other.aeroport_;
      destinatie_ = other.destinatie_;
      plecare_ = other.plecare_;
      nrLocuri_ = other.nrLocuri_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Zbor Clone() {
      return new Zbor(this);
    }

    /// <summary>Field number for the "aeroport" field.</summary>
    public const int AeroportFieldNumber = 1;
    private string aeroport_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Aeroport {
      get { return aeroport_; }
      set {
        aeroport_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "destinatie" field.</summary>
    public const int DestinatieFieldNumber = 2;
    private string destinatie_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Destinatie {
      get { return destinatie_; }
      set {
        destinatie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "plecare" field.</summary>
    public const int PlecareFieldNumber = 3;
    private string plecare_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Plecare {
      get { return plecare_; }
      set {
        plecare_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nrLocuri" field.</summary>
    public const int NrLocuriFieldNumber = 4;
    private int nrLocuri_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NrLocuri {
      get { return nrLocuri_; }
      set {
        nrLocuri_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 5;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Zbor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Zbor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Aeroport != other.Aeroport) return false;
      if (Destinatie != other.Destinatie) return false;
      if (Plecare != other.Plecare) return false;
      if (NrLocuri != other.NrLocuri) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Aeroport.Length != 0) hash ^= Aeroport.GetHashCode();
      if (Destinatie.Length != 0) hash ^= Destinatie.GetHashCode();
      if (Plecare.Length != 0) hash ^= Plecare.GetHashCode();
      if (NrLocuri != 0) hash ^= NrLocuri.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Aeroport.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Aeroport);
      }
      if (Destinatie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Destinatie);
      }
      if (Plecare.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Plecare);
      }
      if (NrLocuri != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NrLocuri);
      }
      if (Id != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Aeroport.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Aeroport);
      }
      if (Destinatie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Destinatie);
      }
      if (Plecare.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Plecare);
      }
      if (NrLocuri != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NrLocuri);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Zbor other) {
      if (other == null) {
        return;
      }
      if (other.Aeroport.Length != 0) {
        Aeroport = other.Aeroport;
      }
      if (other.Destinatie.Length != 0) {
        Destinatie = other.Destinatie;
      }
      if (other.Plecare.Length != 0) {
        Plecare = other.Plecare;
      }
      if (other.NrLocuri != 0) {
        NrLocuri = other.NrLocuri;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Aeroport = input.ReadString();
            break;
          }
          case 18: {
            Destinatie = input.ReadString();
            break;
          }
          case 26: {
            Plecare = input.ReadString();
            break;
          }
          case 32: {
            NrLocuri = input.ReadInt32();
            break;
          }
          case 40: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Networking.ZboruriReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class RequestFindZboruri : pb::IMessage<RequestFindZboruri> {
    private static readonly pb::MessageParser<RequestFindZboruri> _parser = new pb::MessageParser<RequestFindZboruri>(() => new RequestFindZboruri());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestFindZboruri> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Networking.ZboruriReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestFindZboruri() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestFindZboruri(RequestFindZboruri other) : this() {
      dest_ = other.dest_;
      date_ = other.date_;
      min_ = other.min_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestFindZboruri Clone() {
      return new RequestFindZboruri(this);
    }

    /// <summary>Field number for the "dest" field.</summary>
    public const int DestFieldNumber = 1;
    private string dest_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dest {
      get { return dest_; }
      set {
        dest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 2;
    private string date_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Date {
      get { return date_; }
      set {
        date_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "min" field.</summary>
    public const int MinFieldNumber = 3;
    private int min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Min {
      get { return min_; }
      set {
        min_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestFindZboruri);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestFindZboruri other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Dest != other.Dest) return false;
      if (Date != other.Date) return false;
      if (Min != other.Min) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Dest.Length != 0) hash ^= Dest.GetHashCode();
      if (Date.Length != 0) hash ^= Date.GetHashCode();
      if (Min != 0) hash ^= Min.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Dest.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Dest);
      }
      if (Date.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Date);
      }
      if (Min != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Min);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Dest.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dest);
      }
      if (Date.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Date);
      }
      if (Min != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Min);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestFindZboruri other) {
      if (other == null) {
        return;
      }
      if (other.Dest.Length != 0) {
        Dest = other.Dest;
      }
      if (other.Date.Length != 0) {
        Date = other.Date;
      }
      if (other.Min != 0) {
        Min = other.Min;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Dest = input.ReadString();
            break;
          }
          case 18: {
            Date = input.ReadString();
            break;
          }
          case 24: {
            Min = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestCumparaBilet : pb::IMessage<RequestCumparaBilet> {
    private static readonly pb::MessageParser<RequestCumparaBilet> _parser = new pb::MessageParser<RequestCumparaBilet>(() => new RequestCumparaBilet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestCumparaBilet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Networking.ZboruriReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestCumparaBilet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestCumparaBilet(RequestCumparaBilet other) : this() {
      client_ = other.client_;
      tara_ = other.tara_;
      oras_ = other.oras_;
      turisti_ = other.turisti_.Clone();
      nrLocuri_ = other.nrLocuri_;
      zbor_ = other.zbor_ != null ? other.zbor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestCumparaBilet Clone() {
      return new RequestCumparaBilet(this);
    }

    /// <summary>Field number for the "client" field.</summary>
    public const int ClientFieldNumber = 1;
    private string client_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Client {
      get { return client_; }
      set {
        client_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tara" field.</summary>
    public const int TaraFieldNumber = 2;
    private string tara_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tara {
      get { return tara_; }
      set {
        tara_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "oras" field.</summary>
    public const int OrasFieldNumber = 3;
    private string oras_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Oras {
      get { return oras_; }
      set {
        oras_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "turisti" field.</summary>
    public const int TuristiFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_turisti_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> turisti_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Turisti {
      get { return turisti_; }
    }

    /// <summary>Field number for the "nrLocuri" field.</summary>
    public const int NrLocuriFieldNumber = 5;
    private int nrLocuri_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NrLocuri {
      get { return nrLocuri_; }
      set {
        nrLocuri_ = value;
      }
    }

    /// <summary>Field number for the "zbor" field.</summary>
    public const int ZborFieldNumber = 6;
    private global::Networking.Zbor zbor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Networking.Zbor Zbor {
      get { return zbor_; }
      set {
        zbor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestCumparaBilet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestCumparaBilet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Client != other.Client) return false;
      if (Tara != other.Tara) return false;
      if (Oras != other.Oras) return false;
      if(!turisti_.Equals(other.turisti_)) return false;
      if (NrLocuri != other.NrLocuri) return false;
      if (!object.Equals(Zbor, other.Zbor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Client.Length != 0) hash ^= Client.GetHashCode();
      if (Tara.Length != 0) hash ^= Tara.GetHashCode();
      if (Oras.Length != 0) hash ^= Oras.GetHashCode();
      hash ^= turisti_.GetHashCode();
      if (NrLocuri != 0) hash ^= NrLocuri.GetHashCode();
      if (zbor_ != null) hash ^= Zbor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Client.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Client);
      }
      if (Tara.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Tara);
      }
      if (Oras.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Oras);
      }
      turisti_.WriteTo(output, _repeated_turisti_codec);
      if (NrLocuri != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(NrLocuri);
      }
      if (zbor_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Zbor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Client.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Client);
      }
      if (Tara.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tara);
      }
      if (Oras.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Oras);
      }
      size += turisti_.CalculateSize(_repeated_turisti_codec);
      if (NrLocuri != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NrLocuri);
      }
      if (zbor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Zbor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestCumparaBilet other) {
      if (other == null) {
        return;
      }
      if (other.Client.Length != 0) {
        Client = other.Client;
      }
      if (other.Tara.Length != 0) {
        Tara = other.Tara;
      }
      if (other.Oras.Length != 0) {
        Oras = other.Oras;
      }
      turisti_.Add(other.turisti_);
      if (other.NrLocuri != 0) {
        NrLocuri = other.NrLocuri;
      }
      if (other.zbor_ != null) {
        if (zbor_ == null) {
          Zbor = new global::Networking.Zbor();
        }
        Zbor.MergeFrom(other.Zbor);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Client = input.ReadString();
            break;
          }
          case 18: {
            Tara = input.ReadString();
            break;
          }
          case 26: {
            Oras = input.ReadString();
            break;
          }
          case 34: {
            turisti_.AddEntriesFrom(input, _repeated_turisti_codec);
            break;
          }
          case 40: {
            NrLocuri = input.ReadInt32();
            break;
          }
          case 50: {
            if (zbor_ == null) {
              Zbor = new global::Networking.Zbor();
            }
            input.ReadMessage(Zbor);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BiletCumparat : pb::IMessage<BiletCumparat> {
    private static readonly pb::MessageParser<BiletCumparat> _parser = new pb::MessageParser<BiletCumparat>(() => new BiletCumparat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BiletCumparat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Networking.ZboruriReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BiletCumparat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BiletCumparat(BiletCumparat other) : this() {
      newZbor_ = other.newZbor_ != null ? other.newZbor_.Clone() : null;
      oldZbor_ = other.oldZbor_ != null ? other.oldZbor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BiletCumparat Clone() {
      return new BiletCumparat(this);
    }

    /// <summary>Field number for the "newZbor" field.</summary>
    public const int NewZborFieldNumber = 1;
    private global::Networking.Zbor newZbor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Networking.Zbor NewZbor {
      get { return newZbor_; }
      set {
        newZbor_ = value;
      }
    }

    /// <summary>Field number for the "oldZbor" field.</summary>
    public const int OldZborFieldNumber = 2;
    private global::Networking.Zbor oldZbor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Networking.Zbor OldZbor {
      get { return oldZbor_; }
      set {
        oldZbor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BiletCumparat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BiletCumparat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NewZbor, other.NewZbor)) return false;
      if (!object.Equals(OldZbor, other.OldZbor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (newZbor_ != null) hash ^= NewZbor.GetHashCode();
      if (oldZbor_ != null) hash ^= OldZbor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (newZbor_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NewZbor);
      }
      if (oldZbor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OldZbor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (newZbor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewZbor);
      }
      if (oldZbor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OldZbor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BiletCumparat other) {
      if (other == null) {
        return;
      }
      if (other.newZbor_ != null) {
        if (newZbor_ == null) {
          NewZbor = new global::Networking.Zbor();
        }
        NewZbor.MergeFrom(other.NewZbor);
      }
      if (other.oldZbor_ != null) {
        if (oldZbor_ == null) {
          OldZbor = new global::Networking.Zbor();
        }
        OldZbor.MergeFrom(other.OldZbor);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (newZbor_ == null) {
              NewZbor = new global::Networking.Zbor();
            }
            input.ReadMessage(NewZbor);
            break;
          }
          case 18: {
            if (oldZbor_ == null) {
              OldZbor = new global::Networking.Zbor();
            }
            input.ReadMessage(OldZbor);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResponseFindZboruri : pb::IMessage<ResponseFindZboruri> {
    private static readonly pb::MessageParser<ResponseFindZboruri> _parser = new pb::MessageParser<ResponseFindZboruri>(() => new ResponseFindZboruri());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseFindZboruri> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Networking.ZboruriReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseFindZboruri() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseFindZboruri(ResponseFindZboruri other) : this() {
      flights_ = other.flights_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseFindZboruri Clone() {
      return new ResponseFindZboruri(this);
    }

    /// <summary>Field number for the "flights" field.</summary>
    public const int FlightsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Networking.Zbor> _repeated_flights_codec
        = pb::FieldCodec.ForMessage(10, global::Networking.Zbor.Parser);
    private readonly pbc::RepeatedField<global::Networking.Zbor> flights_ = new pbc::RepeatedField<global::Networking.Zbor>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Networking.Zbor> Flights {
      get { return flights_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseFindZboruri);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseFindZboruri other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!flights_.Equals(other.flights_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= flights_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      flights_.WriteTo(output, _repeated_flights_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += flights_.CalculateSize(_repeated_flights_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseFindZboruri other) {
      if (other == null) {
        return;
      }
      flights_.Add(other.flights_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            flights_.AddEntriesFrom(input, _repeated_flights_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Networking.ZboruriReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      errorMessage_ = other.errorMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "errorMessage" field.</summary>
    public const int ErrorMessageFieldNumber = 1;
    private string errorMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorMessage != other.ErrorMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestFindZbor : pb::IMessage<RequestFindZbor> {
    private static readonly pb::MessageParser<RequestFindZbor> _parser = new pb::MessageParser<RequestFindZbor>(() => new RequestFindZbor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestFindZbor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Networking.ZboruriReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestFindZbor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestFindZbor(RequestFindZbor other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestFindZbor Clone() {
      return new RequestFindZbor(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestFindZbor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestFindZbor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestFindZbor other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
