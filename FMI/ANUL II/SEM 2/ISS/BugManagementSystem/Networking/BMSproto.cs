// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: BMSproto.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Networking {

  /// <summary>Holder for reflection information generated from BMSproto.proto</summary>
  public static partial class BMSprotoReflection {

    #region Descriptor
    /// <summary>File descriptor for BMSproto.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BMSprotoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5CTVNwcm90by5wcm90byKBAQoIRW1wbG95ZWUSEAoIdXNlcm5hbWUYASAB",
            "KAkSDAoEbmFtZRgCIAEoCRIQCghwYXNzd29yZBgDIAEoCRIcCgRyb2xlGAQg",
            "ASgOMg4uRW1wbG95ZWUuUm9sZSIlCgRSb2xlEg0KCVZhbGlkYXRvchAAEg4K",
            "ClByb2dyYW1tZXIQASKjAQoHUmVxdWVzdBIbCgR0eXBlGAEgASgOMg0uUmVx",
            "dWVzdC5UeXBlEh0KCGVtcGxveWVlGAIgASgLMgkuRW1wbG95ZWVIABISCgh1",
            "c2VybmFtZRgDIAEoCUgAIj0KBFR5cGUSEAoMR2V0RW1wbG95ZWVzEAASDwoL",
            "QWRkRW1wbG95ZWUQARISCg5SZW1vdmVFbXBsb3llZRACQgkKB3BheWxvYWQi",
            "qQEKCFJlc3BvbnNlEhwKBHR5cGUYASABKA4yDi5SZXNwb25zZS5UeXBlEg8K",
            "B21lc3NhZ2UYAiABKAkSHAoJZW1wbG95ZWVzGAMgAygLMgkuRW1wbG95ZWUi",
            "UAoEVHlwZRIGCgJPaxAAEgkKBUVycm9yEAESEAoMR2V0RW1wbG95ZWVzEAIS",
            "DwoLQWRkRW1wbG95ZWUQAxISCg5SZW1vdmVFbXBsb3llZRAEQg2qAgpOZXR3",
            "b3JraW5nYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Networking.Employee), global::Networking.Employee.Parser, new[]{ "Username", "Name", "Password", "Role" }, null, new[]{ typeof(global::Networking.Employee.Types.Role) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Networking.Request), global::Networking.Request.Parser, new[]{ "Type", "Employee", "Username" }, new[]{ "Payload" }, new[]{ typeof(global::Networking.Request.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Networking.Response), global::Networking.Response.Parser, new[]{ "Type", "Message", "Employees" }, null, new[]{ typeof(global::Networking.Response.Types.Type) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Employee : pb::IMessage<Employee> {
    private static readonly pb::MessageParser<Employee> _parser = new pb::MessageParser<Employee>(() => new Employee());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Employee> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Networking.BMSprotoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Employee() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Employee(Employee other) : this() {
      username_ = other.username_;
      name_ = other.name_;
      password_ = other.password_;
      role_ = other.role_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Employee Clone() {
      return new Employee(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 4;
    private global::Networking.Employee.Types.Role role_ = global::Networking.Employee.Types.Role.Validator;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Networking.Employee.Types.Role Role {
      get { return role_; }
      set {
        role_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Employee);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Employee other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Name != other.Name) return false;
      if (Password != other.Password) return false;
      if (Role != other.Role) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (Role != global::Networking.Employee.Types.Role.Validator) hash ^= Role.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (Role != global::Networking.Employee.Types.Role.Validator) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Role);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (Role != global::Networking.Employee.Types.Role.Validator) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Role);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Employee other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.Role != global::Networking.Employee.Types.Role.Validator) {
        Role = other.Role;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
          case 32: {
            Role = (global::Networking.Employee.Types.Role) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Employee message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Role {
        [pbr::OriginalName("Validator")] Validator = 0,
        [pbr::OriginalName("Programmer")] Programmer = 1,
      }

    }
    #endregion

  }

  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Networking.BMSprotoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      type_ = other.type_;
      switch (other.PayloadCase) {
        case PayloadOneofCase.Employee:
          Employee = other.Employee.Clone();
          break;
        case PayloadOneofCase.Username:
          Username = other.Username;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Networking.Request.Types.Type type_ = global::Networking.Request.Types.Type.GetEmployees;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Networking.Request.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "employee" field.</summary>
    public const int EmployeeFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Networking.Employee Employee {
      get { return payloadCase_ == PayloadOneofCase.Employee ? (global::Networking.Employee) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Employee;
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return payloadCase_ == PayloadOneofCase.Username ? (string) payload_ : ""; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        payloadCase_ = PayloadOneofCase.Username;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      Employee = 2,
      Username = 3,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Employee, other.Employee)) return false;
      if (Username != other.Username) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Networking.Request.Types.Type.GetEmployees) hash ^= Type.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Employee) hash ^= Employee.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Username) hash ^= Username.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Networking.Request.Types.Type.GetEmployees) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (payloadCase_ == PayloadOneofCase.Employee) {
        output.WriteRawTag(18);
        output.WriteMessage(Employee);
      }
      if (payloadCase_ == PayloadOneofCase.Username) {
        output.WriteRawTag(26);
        output.WriteString(Username);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Networking.Request.Types.Type.GetEmployees) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (payloadCase_ == PayloadOneofCase.Employee) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Employee);
      }
      if (payloadCase_ == PayloadOneofCase.Username) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Networking.Request.Types.Type.GetEmployees) {
        Type = other.Type;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.Employee:
          if (Employee == null) {
            Employee = new global::Networking.Employee();
          }
          Employee.MergeFrom(other.Employee);
          break;
        case PayloadOneofCase.Username:
          Username = other.Username;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Networking.Request.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            global::Networking.Employee subBuilder = new global::Networking.Employee();
            if (payloadCase_ == PayloadOneofCase.Employee) {
              subBuilder.MergeFrom(Employee);
            }
            input.ReadMessage(subBuilder);
            Employee = subBuilder;
            break;
          }
          case 26: {
            Username = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Request message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("GetEmployees")] GetEmployees = 0,
        [pbr::OriginalName("AddEmployee")] AddEmployee = 1,
        [pbr::OriginalName("RemoveEmployee")] RemoveEmployee = 2,
      }

    }
    #endregion

  }

  public sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Networking.BMSprotoReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      type_ = other.type_;
      message_ = other.message_;
      employees_ = other.employees_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Networking.Response.Types.Type type_ = global::Networking.Response.Types.Type.Ok;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Networking.Response.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "employees" field.</summary>
    public const int EmployeesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Networking.Employee> _repeated_employees_codec
        = pb::FieldCodec.ForMessage(26, global::Networking.Employee.Parser);
    private readonly pbc::RepeatedField<global::Networking.Employee> employees_ = new pbc::RepeatedField<global::Networking.Employee>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Networking.Employee> Employees {
      get { return employees_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Message != other.Message) return false;
      if(!employees_.Equals(other.employees_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Networking.Response.Types.Type.Ok) hash ^= Type.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      hash ^= employees_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Networking.Response.Types.Type.Ok) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      employees_.WriteTo(output, _repeated_employees_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Networking.Response.Types.Type.Ok) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      size += employees_.CalculateSize(_repeated_employees_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Networking.Response.Types.Type.Ok) {
        Type = other.Type;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      employees_.Add(other.employees_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Networking.Response.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            employees_.AddEntriesFrom(input, _repeated_employees_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("Ok")] Ok = 0,
        [pbr::OriginalName("Error")] Error = 1,
        [pbr::OriginalName("GetEmployees")] GetEmployees = 2,
        [pbr::OriginalName("AddEmployee")] AddEmployee = 3,
        [pbr::OriginalName("RemoveEmployee")] RemoveEmployee = 4,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
